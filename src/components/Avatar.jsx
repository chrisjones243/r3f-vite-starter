/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useAnimations, useFBX, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useControls } from 'leva'
import * as THREE from 'three'

export function Avatar(props) {
    const { animation } = props
    const { headFollow, cursorFollow} = useControls({
        headFollow: false,
        cursorFollow: false
    })
    const group = useRef()
    const { nodes, materials } = useGLTF('models/6492f802b357e4b10d461cbf.glb')

    const { animations: sittingPose } = useFBX('animations/Male Sitting Pose.fbx')
    const { animations: thriller } = useFBX('animations/Thriller Part 2.fbx')
    const { animations: wave } = useFBX('animations/Wave Hip Hop Dance.fbx')

    sittingPose[0].name = 'Sitting Pose'
    thriller[0].name = 'Thriller'
    wave[0].name = 'Wave'
    
    const { actions } = useAnimations([sittingPose[0], thriller[0], wave[0]], group)

    useFrame((state) => {
        if (headFollow) {
            group.current.getObjectByName("Neck").lookAt(state.camera.position)
            group.current.getObjectByName("Head").lookAt(state.camera.position)
            group.current.getObjectByName("LeftEye").lookAt(state.camera.position)
            group.current.getObjectByName("RightEye").lookAt(state.camera.position)
            group.current.getObjectByName("Spine1").lookAt(state.camera.position)
            group.current.getObjectByName("Spine2").lookAt(state.camera.position)
        }
        if (cursorFollow) {
            const target = new THREE.Vector3(state.mouse.x, state.mouse.y, 1);
            group.current.getObjectByName("Neck").lookAt(target)
            group.current.getObjectByName("Head").lookAt(target)
            group.current.getObjectByName("LeftEye").lookAt(target)
            group.current.getObjectByName("RightEye").lookAt(target)
            group.current.getObjectByName("Spine1").lookAt(target)
            group.current.getObjectByName("Spine2").lookAt(target)
        }


    })

    useEffect(() => {
        actions[animation].reset().fadeIn(2).play()
        return () => actions[animation].fadeOut(2)
    }, [animation])

    return (
        <group {...props} ref={group} dispose={null}>
            <primitive object={nodes.Hips} />
            <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
            <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
            <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
            <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
            <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
            <skinnedMesh geometry={nodes.Wolf3D_Glasses.geometry} material={materials.Wolf3D_Glasses} skeleton={nodes.Wolf3D_Glasses.skeleton} />
            <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
            <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
            <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
            <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
        </group>
    )
}

useGLTF.preload('models/6492f802b357e4b10d461cbf.glb')
